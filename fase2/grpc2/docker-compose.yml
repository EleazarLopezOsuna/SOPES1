version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://`YourPublicIP`:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-tier
  producer:
    image: jaredosuna/producer_fase2
    ports:
      - "50051:50051"
    environment:
      - SERVER_PORT=`YourProducerPort`
      - KAFKA_HOST=`YourKafkaHost`
      - KAFKA_PORT=`YourKafkaPort`
      - KAFKA_TOPIC=`YourKafkaTopic`
    depends_on:
      - kafka
    networks:
      - app-tier
  consumer:
      image: jaredosuna/consumer_fase2
      environment:
        - SERVER_PORT=`YourProducerPort`
        - KAFKA_HOST=`YourKafkaHost`
        - KAFKA_PORT=`YourKafkaPort`
        - KAFKA_TOPIC=`YourKafkaTopic`
        - REDIS_HOST=`YourRedisHost`
        - REDIS_PORT=`YourRedisPort`
        - TIDIS_HOST=`YourTidisHost`
        - TIDIS_PORT=`YourTidisPort`
        - MONGO_HOST=`YourMongoHost`
        - MONGO_PORT=`YourMongoPort`
        - MONGO_DB=`YourMongoDB`
        - MONGO_COL=`YourMongoCollection`
        - MONGO_USER=`YourMongoUser`
        - MONGO_PASS=`YourMongoPassword`
      depends_on:
        - producer
      networks:
        - app-tier

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  app-tier:
    driver: bridge